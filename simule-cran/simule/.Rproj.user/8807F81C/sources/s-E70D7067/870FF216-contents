setwd("E:/Jamie_Info")
load("JamieData.rdata")
#load("JamieCoordinates.rdata")

color = as.matrix(read.csv("MNI_CenterOrigin_Brain_Mask_Coordinates.csv"))[,"STAGE"]
class(color) <- "numeric"
color = color - 2

label = as.matrix(read.csv("MNI_CenterOrigin_Brain_Mask_Coordinates.csv"))[,"Brain_Mask"]

result = simule(JamieData, 0.28, 1, covType = "kendall", TRUE)

graph = returngraph.simule(result)
V(graph)$name = label

JamieCoordinates = as.matrix(read.csv("MNI_CenterOrigin_Brain_Mask_Coordinates.csv"))[,2:4]
class(JamieCoordinates) <- "numeric"

layout = cbind(JamieCoordinates[,1]+90,JamieCoordinates[,2]+126, JamieCoordinates[,3]+72)



simule::plotbrain.simule(result, layout = layout, color = color, label = label)
### share
{
simule::plotbrain.simule(result, type = "share", neighbouroption = "task",
                 subID = NULL, index = NULL, layout = layout, color = color, label = label)

legend3d("topright", legend = c('Shared',paste('Stage', c('3', '4', '5', '6'))), pch = 16, col = c(NA,rainbow(4)), cex=0.8, inset=c(0.02))
}
sharegraph = returngraph.simule(result, type = "share")
V(sharegraph)$name = label
E(sharegraph)


### control
{
simule::plotbrain.simule(result, type = "taskspecific", neighbouroption = "task",
                         subID = 1, index = NULL, layout = layout, color = color, label = label)

legend3d("topright", legend = c('Control',paste('Stage', c('3', '4', '5', '6'))), pch = 16, col = c(NA,rainbow(4)), cex=0.8, inset=c(0.02))


}
controlgraph = returngraph.simule(result, type = "taskspecific", subID = 1)
V(controlgraph)$name = label
E(controlgraph)



### early
{
simule::plotbrain.simule(result, type = "taskspecific", neighbouroption = "task",
                         subID = 2, index = NULL, layout = layout, color = color, label = label)

legend3d("topright", legend = c('Early',paste('Stage', c('3', '4', '5', '6'))), pch = 16, col = c(NA,rainbow(4)), cex=0.8, inset=c(0.02))


}
earlygraph = returngraph.simule(result, type = "taskspecific", subID = 2)
V(earlygraph)$name = label
E(earlygraph)




### advanced
{
simule::plotbrain.simule(result, type = "taskspecific", neighbouroption = "task",
                         subID = 3, index = NULL, layout = layout, color = color, label = label)

legend3d("topright", legend = c('Advanced',paste('Stage', c('3', '4', '5', '6'))), pch = 16, col = c(NA,rainbow(4)), cex=0.8, inset=c(0.02))
}

advancegraph = returngraph.simule(result, type = "taskspecific", subID = 3)
V(advancegraph)$name = label
E(advancegraph)
